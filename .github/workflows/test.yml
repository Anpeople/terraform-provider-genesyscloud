# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Tests
on:
  push:
    paths-ignore:
      - 'README.md'
  # Run daily tests
  schedule:
    - cron: '0 10 * * *'
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        go build -v .

  # run acceptance tests in a matrix with Terraform core versions

  all-other-unit-tests:
    uses: ./.github/workflows/test-workflow.yml
    name: All Other Unit Tests
    needs: build
    with:
      package-path: './genesyscloud/...'
      skip-regexp: 'TfExport|Outbound|Routing|Architect|Telephony|TaskManagement
      |ResponseManagement+|Idp+|Journey|Knowledge|TestAccDataSource|TestAccResource'
      coverage-out-filename: 'unit-coverage.out'
      coverage-html-filename: 'unit-coverage.html'
      test-log-artifact-name: 'unit test logs'
      tf-unit: '*'
    secrets:
      client-id: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_ID }}
      client-secret: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_SECRET }}

  export-tests:
    uses: ./.github/workflows/test-workflow.yml
    name: Export
    needs: build
    with:
      package-path: './genesyscloud/tfexporter/...'
      coverage-out-filename: 'export-coverage.out'
      coverage-html-filename: 'export-coverage.html'
      running-export-tests: 'true'
      test-log-artifact-name: 'export logs'
      sdk-log-artifact-name: 'export sdk_log'
      sdk-debug-log-file-path: './genesyscloud/tfexporter/sdk_debug.log'
    secrets:
      client-id: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_ID }}
      client-secret: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_SECRET }}

  outbound-tests:
    uses: ./.github/workflows/test-workflow.yml
    name: Outbound
    needs: build
    with:
      package-path: './genesyscloud/...'
      run-regexp: '(Outbound)+'
      coverage-out-filename: 'ob-coverage.out'
      coverage-html-filename: 'ob-coverage.html'
      test-log-artifact-name: 'outbound logs'
    secrets:
      client-id: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_ID }}
      client-secret: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_SECRET }}

  routing-tests:
    uses: ./.github/workflows/test-workflow.yml
    name: Routing
    needs: build
    with:
      package-path: './genesyscloud/...'
      run-regexp: '(Routing)+'
      coverage-out-filename: 'routing-coverage.out'
      coverage-html-filename: 'routing-coverage.html'
      test-log-artifact-name: 'routing logs'
      sdk-log-artifact-name: 'routing sdk_log'
    secrets:
      client-id: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_ID }}
      client-secret: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_SECRET }}

  architect-tests:
    uses: ./.github/workflows/test-workflow.yml
    name: Architect
    needs: build
    with:
      package-path: './genesyscloud/...'
      run-regexp: '(Architect)+'
      coverage-out-filename: 'architect-coverage.out'
      coverage-html-filename: 'architect-coverage.html'
      test-log-artifact-name: 'architect logs'
      sdk-log-artifact-name: 'architect sdk_log'
    secrets:
      client-id: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_ID }}
      client-secret: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_SECRET }}

  telephony-tests:
    uses: ./.github/workflows/test-workflow.yml
    name: Telephony
    needs: build
    with:
      package-path: './genesyscloud/...'
      run-regexp: '(Telephony)+'
      coverage-out-filename: 'telephony-coverage.out'
      coverage-html-filename: 'telephony-coverage.html'
      test-log-artifact-name: 'telephony logs'
      sdk-log-artifact-name: 'telephony sdk_log'
    secrets:
      client-id: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_ID }}
      client-secret: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_SECRET }}

  task-management-tests:
    uses: ./.github/workflows/test-workflow.yml
    name: Task Management
    needs: build
    with:
      package-path: './genesyscloud/...'
      run-regexp: '(TaskManagement)+'
      coverage-out-filename: 'task-management-coverage.out'
      coverage-html-filename: 'task-management-coverage.html'
      test-log-artifact-name: 'task-management logs'
      sdk-log-artifact-name: 'task-management sdk_log'
    secrets:
      client-id: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_ID }}
      client-secret: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_SECRET }}

  response-management-tests:
    uses: ./.github/workflows/test-workflow.yml
    name: Response Management
    needs: build
    with:
      package-path: './genesyscloud/...'
      run-regexp: '(ResponseManagement)+'
      coverage-out-filename: 'response-management-coverage.out'
      coverage-html-filename: 'response-management-coverage.html'
      test-log-artifact-name: 'response-management logs'
      sdk-log-artifact-name: 'response-management sdk_log'
    secrets:
      client-id: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_ID }}
      client-secret: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_SECRET }}

  idp-tests:
    uses: ./.github/workflows/test-workflow.yml
    name: IDP
    needs: build
    with:
      package-path: './genesyscloud/...'
      run-regexp: '(Idp)+'
      coverage-out-filename: 'idp-coverage.out'
      coverage-html-filename: 'idp-coverage.html'
      test-log-artifact-name: 'idp logs'
      sdk-log-artifact-name: 'idp sdk_log'
    secrets:
      client-id: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_ID }}
      client-secret: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_SECRET }}

  journey-tests:
    uses: ./.github/workflows/test-workflow.yml
    name: Journey
    needs: build
    with:
      package-path: './genesyscloud/...'
      run-regexp: '(Journey)+'
      coverage-out-filename: 'journey-coverage.out'
      coverage-html-filename: 'journey-coverage.html'
      test-log-artifact-name: 'journey logs'
      sdk-log-artifact-name: 'journey sdk_log'
    secrets:
      client-id: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_ID }}
      client-secret: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_SECRET }}

  knowledge-tests:
    uses: ./.github/workflows/test-workflow.yml
    name: Knowledge
    needs: build
    with:
      package-path: './genesyscloud/...'
      run-regexp: '(Knowledge)+'
      coverage-out-filename: 'knowledge-coverage.out'
      coverage-html-filename: 'knowledge-coverage.html'
      test-log-artifact-name: 'knowledge logs'
      sdk-log-artifact-name: 'knowledge sdk_log'
    secrets:
      client-id: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_ID }}
      client-secret: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_SECRET }}

  all-other-resource-tests:
    uses: ./.github/workflows/test-workflow.yml
    name: All Other Resource Tests
    needs: build
    if: ${{ always() }}
    with:
      package-path: './genesyscloud/...'
      skip-regexp: '(TfExport)+|(Outbound)+|(Routing)+|(Architect)+|(Telephony)+
      |(TaskManagement)+|(ResponseManagement)+|(Idp)+|(Journey)+|(Knowledge)+'
      run-regexp: 'TestAccResource'
      coverage-out-filename: 'resource-coverage.out'
      coverage-html-filename: 'resource-coverage.html'
      test-log-artifact-name: 'resource tests logs'
    secrets:
      client-id: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_ID }}
      client-secret: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_SECRET }}

  all-other-datasource-tests:
    needs: build
    if: ${{ always() }}
    uses: ./.github/workflows/test-workflow.yml
    name: All Other DataSource Tests
    with:
      package-path: './genesyscloud/...'
      skip-regexp: '(TfExport)+|(Outbound)+|(Routing)+|(Architect)+|(Telephony)+
      |(TaskManagement)+|(ResponseManagement)+|(Idp)+|(Journey)+|(Knowledge)+'
      run-regexp: 'TestAccDataSource'
      coverage-out-filename: 'data-source-coverage.out'
      coverage-html-filename: 'data-source-coverage.html'
      test-log-artifact-name: 'data source tests logs'
    secrets:
      client-id: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_ID }}
      client-secret: ${{ secrets.TEST_GENESYSCLOUD_OAUTHCLIENT_SECRET }}